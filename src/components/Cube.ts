import { Vec3, degToRad } from './utils'
import m4 from './m4'
import Shape from './Shape'

export default class Cube extends Shape {
    readonly VERTICES = new Float32Array([
        // front    
        -1, -1, -1,
        -1, 1, -1,
        1, 1, -1,
        -1, -1, -1,
        1, 1, -1,
        1, -1, -1,

        // back    
        -1, -1, 1,
        1, 1, 1,
        -1, 1, 1,
        -1, -1, 1,
        1, -1, 1,
        1, 1, 1,

        // left    
        -1, -1, -1,
        -1, -1, 1,
        -1, 1, 1,
        -1, -1, -1,
        -1, 1, 1,
        -1, 1, -1,

        // right    
        1, -1, -1,
        1, 1, 1,
        1, -1, 1,
        1, -1, -1,
        1, 1, -1,
        1, 1, 1,

        // top    
        -1, 1, -1,
        1, 1, 1,
        1, 1, -1,
        -1, 1, 1,
        1, 1, 1,
        -1, 1, -1,

        // bottom    
        1, -1, -1,
        1, -1, 1,
        -1, -1, -1,
        -1, -1, -1,
        1, -1, 1,
        -1, -1, 1,
    ])

    readonly COLORS = new Uint8Array([
        200, 70, 120,
        200, 70, 120,
        200, 70, 120,
        200, 70, 120,
        200, 70, 120,
        200, 70, 120,

        80, 70, 200,
        80, 70, 200,
        80, 70, 200,
        80, 70, 200,
        80, 70, 200,
        80, 70, 200,

        70, 200, 210,
        70, 200, 210,
        70, 200, 210,
        70, 200, 210,
        70, 200, 210,
        70, 200, 210,

        200, 200, 70,
        200, 200, 70,
        200, 200, 70,
        200, 200, 70,
        200, 200, 70,
        200, 200, 70,

        210, 100, 70,
        210, 100, 70,
        210, 100, 70,
        210, 100, 70,
        210, 100, 70,
        210, 100, 70,

        210, 160, 70,
        210, 160, 70,
        210, 160, 70,
        210, 160, 70,
        210, 160, 70,
        210, 160, 70,
    ])

    constructor(gl: WebGLRenderingContext) {
        super(gl)
        this.originTranslationCorrection.x = -.5
        this.transform.scale = Vec3.identity.multiply(50)
    }
}